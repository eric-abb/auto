#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_308962912849910417) {
   out_308962912849910417[0] = 0;
   out_308962912849910417[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_308962912849910417[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_308962912849910417[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_308962912849910417[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_308962912849910417[5] = -sin(in_vec[1]);
   out_308962912849910417[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_308962912849910417[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_308962912849910417[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_308962912849910417[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_308962912849910417[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_308962912849910417[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_308962912849910417[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_308962912849910417[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_308962912849910417[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_308962912849910417[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_308962912849910417[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_308962912849910417[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3752222109732568852) {
   out_3752222109732568852[0] = delta_x[0] + nom_x[0];
   out_3752222109732568852[1] = delta_x[1] + nom_x[1];
   out_3752222109732568852[2] = delta_x[2] + nom_x[2];
   out_3752222109732568852[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3752222109732568852[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3752222109732568852[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3752222109732568852[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3752222109732568852[7] = delta_x[6] + nom_x[7];
   out_3752222109732568852[8] = delta_x[7] + nom_x[8];
   out_3752222109732568852[9] = delta_x[8] + nom_x[9];
   out_3752222109732568852[10] = delta_x[9] + nom_x[10];
   out_3752222109732568852[11] = delta_x[10] + nom_x[11];
   out_3752222109732568852[12] = delta_x[11] + nom_x[12];
   out_3752222109732568852[13] = delta_x[12] + nom_x[13];
   out_3752222109732568852[14] = delta_x[13] + nom_x[14];
   out_3752222109732568852[15] = delta_x[14] + nom_x[15];
   out_3752222109732568852[16] = delta_x[15] + nom_x[16];
   out_3752222109732568852[17] = delta_x[16] + nom_x[17];
   out_3752222109732568852[18] = delta_x[17] + nom_x[18];
   out_3752222109732568852[19] = delta_x[18] + nom_x[19];
   out_3752222109732568852[20] = delta_x[19] + nom_x[20];
   out_3752222109732568852[21] = delta_x[20] + nom_x[21];
   out_3752222109732568852[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2689811853463818113) {
   out_2689811853463818113[0] = -nom_x[0] + true_x[0];
   out_2689811853463818113[1] = -nom_x[1] + true_x[1];
   out_2689811853463818113[2] = -nom_x[2] + true_x[2];
   out_2689811853463818113[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2689811853463818113[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2689811853463818113[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2689811853463818113[6] = -nom_x[7] + true_x[7];
   out_2689811853463818113[7] = -nom_x[8] + true_x[8];
   out_2689811853463818113[8] = -nom_x[9] + true_x[9];
   out_2689811853463818113[9] = -nom_x[10] + true_x[10];
   out_2689811853463818113[10] = -nom_x[11] + true_x[11];
   out_2689811853463818113[11] = -nom_x[12] + true_x[12];
   out_2689811853463818113[12] = -nom_x[13] + true_x[13];
   out_2689811853463818113[13] = -nom_x[14] + true_x[14];
   out_2689811853463818113[14] = -nom_x[15] + true_x[15];
   out_2689811853463818113[15] = -nom_x[16] + true_x[16];
   out_2689811853463818113[16] = -nom_x[17] + true_x[17];
   out_2689811853463818113[17] = -nom_x[18] + true_x[18];
   out_2689811853463818113[18] = -nom_x[19] + true_x[19];
   out_2689811853463818113[19] = -nom_x[20] + true_x[20];
   out_2689811853463818113[20] = -nom_x[21] + true_x[21];
   out_2689811853463818113[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_7444513227488068757) {
   out_7444513227488068757[0] = 1.0;
   out_7444513227488068757[1] = 0.0;
   out_7444513227488068757[2] = 0.0;
   out_7444513227488068757[3] = 0.0;
   out_7444513227488068757[4] = 0.0;
   out_7444513227488068757[5] = 0.0;
   out_7444513227488068757[6] = 0.0;
   out_7444513227488068757[7] = 0.0;
   out_7444513227488068757[8] = 0.0;
   out_7444513227488068757[9] = 0.0;
   out_7444513227488068757[10] = 0.0;
   out_7444513227488068757[11] = 0.0;
   out_7444513227488068757[12] = 0.0;
   out_7444513227488068757[13] = 0.0;
   out_7444513227488068757[14] = 0.0;
   out_7444513227488068757[15] = 0.0;
   out_7444513227488068757[16] = 0.0;
   out_7444513227488068757[17] = 0.0;
   out_7444513227488068757[18] = 0.0;
   out_7444513227488068757[19] = 0.0;
   out_7444513227488068757[20] = 0.0;
   out_7444513227488068757[21] = 0.0;
   out_7444513227488068757[22] = 0.0;
   out_7444513227488068757[23] = 1.0;
   out_7444513227488068757[24] = 0.0;
   out_7444513227488068757[25] = 0.0;
   out_7444513227488068757[26] = 0.0;
   out_7444513227488068757[27] = 0.0;
   out_7444513227488068757[28] = 0.0;
   out_7444513227488068757[29] = 0.0;
   out_7444513227488068757[30] = 0.0;
   out_7444513227488068757[31] = 0.0;
   out_7444513227488068757[32] = 0.0;
   out_7444513227488068757[33] = 0.0;
   out_7444513227488068757[34] = 0.0;
   out_7444513227488068757[35] = 0.0;
   out_7444513227488068757[36] = 0.0;
   out_7444513227488068757[37] = 0.0;
   out_7444513227488068757[38] = 0.0;
   out_7444513227488068757[39] = 0.0;
   out_7444513227488068757[40] = 0.0;
   out_7444513227488068757[41] = 0.0;
   out_7444513227488068757[42] = 0.0;
   out_7444513227488068757[43] = 0.0;
   out_7444513227488068757[44] = 0.0;
   out_7444513227488068757[45] = 0.0;
   out_7444513227488068757[46] = 1.0;
   out_7444513227488068757[47] = 0.0;
   out_7444513227488068757[48] = 0.0;
   out_7444513227488068757[49] = 0.0;
   out_7444513227488068757[50] = 0.0;
   out_7444513227488068757[51] = 0.0;
   out_7444513227488068757[52] = 0.0;
   out_7444513227488068757[53] = 0.0;
   out_7444513227488068757[54] = 0.0;
   out_7444513227488068757[55] = 0.0;
   out_7444513227488068757[56] = 0.0;
   out_7444513227488068757[57] = 0.0;
   out_7444513227488068757[58] = 0.0;
   out_7444513227488068757[59] = 0.0;
   out_7444513227488068757[60] = 0.0;
   out_7444513227488068757[61] = 0.0;
   out_7444513227488068757[62] = 0.0;
   out_7444513227488068757[63] = 0.0;
   out_7444513227488068757[64] = 0.0;
   out_7444513227488068757[65] = 0.0;
   out_7444513227488068757[66] = 0.0;
   out_7444513227488068757[67] = 0.0;
   out_7444513227488068757[68] = 0.0;
   out_7444513227488068757[69] = -0.5*state[4];
   out_7444513227488068757[70] = -0.5*state[5];
   out_7444513227488068757[71] = -0.5*state[6];
   out_7444513227488068757[72] = 0.0;
   out_7444513227488068757[73] = 0.0;
   out_7444513227488068757[74] = 0.0;
   out_7444513227488068757[75] = 0.0;
   out_7444513227488068757[76] = 0.0;
   out_7444513227488068757[77] = 0.0;
   out_7444513227488068757[78] = 0.0;
   out_7444513227488068757[79] = 0.0;
   out_7444513227488068757[80] = 0.0;
   out_7444513227488068757[81] = 0.0;
   out_7444513227488068757[82] = 0.0;
   out_7444513227488068757[83] = 0.0;
   out_7444513227488068757[84] = 0.0;
   out_7444513227488068757[85] = 0.0;
   out_7444513227488068757[86] = 0.0;
   out_7444513227488068757[87] = 0.0;
   out_7444513227488068757[88] = 0.0;
   out_7444513227488068757[89] = 0.0;
   out_7444513227488068757[90] = 0.0;
   out_7444513227488068757[91] = 0.5*state[3];
   out_7444513227488068757[92] = 0.5*state[6];
   out_7444513227488068757[93] = -0.5*state[5];
   out_7444513227488068757[94] = 0.0;
   out_7444513227488068757[95] = 0.0;
   out_7444513227488068757[96] = 0.0;
   out_7444513227488068757[97] = 0.0;
   out_7444513227488068757[98] = 0.0;
   out_7444513227488068757[99] = 0.0;
   out_7444513227488068757[100] = 0.0;
   out_7444513227488068757[101] = 0.0;
   out_7444513227488068757[102] = 0.0;
   out_7444513227488068757[103] = 0.0;
   out_7444513227488068757[104] = 0.0;
   out_7444513227488068757[105] = 0.0;
   out_7444513227488068757[106] = 0.0;
   out_7444513227488068757[107] = 0.0;
   out_7444513227488068757[108] = 0.0;
   out_7444513227488068757[109] = 0.0;
   out_7444513227488068757[110] = 0.0;
   out_7444513227488068757[111] = 0.0;
   out_7444513227488068757[112] = 0.0;
   out_7444513227488068757[113] = -0.5*state[6];
   out_7444513227488068757[114] = 0.5*state[3];
   out_7444513227488068757[115] = 0.5*state[4];
   out_7444513227488068757[116] = 0.0;
   out_7444513227488068757[117] = 0.0;
   out_7444513227488068757[118] = 0.0;
   out_7444513227488068757[119] = 0.0;
   out_7444513227488068757[120] = 0.0;
   out_7444513227488068757[121] = 0.0;
   out_7444513227488068757[122] = 0.0;
   out_7444513227488068757[123] = 0.0;
   out_7444513227488068757[124] = 0.0;
   out_7444513227488068757[125] = 0.0;
   out_7444513227488068757[126] = 0.0;
   out_7444513227488068757[127] = 0.0;
   out_7444513227488068757[128] = 0.0;
   out_7444513227488068757[129] = 0.0;
   out_7444513227488068757[130] = 0.0;
   out_7444513227488068757[131] = 0.0;
   out_7444513227488068757[132] = 0.0;
   out_7444513227488068757[133] = 0.0;
   out_7444513227488068757[134] = 0.0;
   out_7444513227488068757[135] = 0.5*state[5];
   out_7444513227488068757[136] = -0.5*state[4];
   out_7444513227488068757[137] = 0.5*state[3];
   out_7444513227488068757[138] = 0.0;
   out_7444513227488068757[139] = 0.0;
   out_7444513227488068757[140] = 0.0;
   out_7444513227488068757[141] = 0.0;
   out_7444513227488068757[142] = 0.0;
   out_7444513227488068757[143] = 0.0;
   out_7444513227488068757[144] = 0.0;
   out_7444513227488068757[145] = 0.0;
   out_7444513227488068757[146] = 0.0;
   out_7444513227488068757[147] = 0.0;
   out_7444513227488068757[148] = 0.0;
   out_7444513227488068757[149] = 0.0;
   out_7444513227488068757[150] = 0.0;
   out_7444513227488068757[151] = 0.0;
   out_7444513227488068757[152] = 0.0;
   out_7444513227488068757[153] = 0.0;
   out_7444513227488068757[154] = 0.0;
   out_7444513227488068757[155] = 0.0;
   out_7444513227488068757[156] = 0.0;
   out_7444513227488068757[157] = 0.0;
   out_7444513227488068757[158] = 0.0;
   out_7444513227488068757[159] = 0.0;
   out_7444513227488068757[160] = 1.0;
   out_7444513227488068757[161] = 0.0;
   out_7444513227488068757[162] = 0.0;
   out_7444513227488068757[163] = 0.0;
   out_7444513227488068757[164] = 0.0;
   out_7444513227488068757[165] = 0.0;
   out_7444513227488068757[166] = 0.0;
   out_7444513227488068757[167] = 0.0;
   out_7444513227488068757[168] = 0.0;
   out_7444513227488068757[169] = 0.0;
   out_7444513227488068757[170] = 0.0;
   out_7444513227488068757[171] = 0.0;
   out_7444513227488068757[172] = 0.0;
   out_7444513227488068757[173] = 0.0;
   out_7444513227488068757[174] = 0.0;
   out_7444513227488068757[175] = 0.0;
   out_7444513227488068757[176] = 0.0;
   out_7444513227488068757[177] = 0.0;
   out_7444513227488068757[178] = 0.0;
   out_7444513227488068757[179] = 0.0;
   out_7444513227488068757[180] = 0.0;
   out_7444513227488068757[181] = 0.0;
   out_7444513227488068757[182] = 0.0;
   out_7444513227488068757[183] = 1.0;
   out_7444513227488068757[184] = 0.0;
   out_7444513227488068757[185] = 0.0;
   out_7444513227488068757[186] = 0.0;
   out_7444513227488068757[187] = 0.0;
   out_7444513227488068757[188] = 0.0;
   out_7444513227488068757[189] = 0.0;
   out_7444513227488068757[190] = 0.0;
   out_7444513227488068757[191] = 0.0;
   out_7444513227488068757[192] = 0.0;
   out_7444513227488068757[193] = 0.0;
   out_7444513227488068757[194] = 0.0;
   out_7444513227488068757[195] = 0.0;
   out_7444513227488068757[196] = 0.0;
   out_7444513227488068757[197] = 0.0;
   out_7444513227488068757[198] = 0.0;
   out_7444513227488068757[199] = 0.0;
   out_7444513227488068757[200] = 0.0;
   out_7444513227488068757[201] = 0.0;
   out_7444513227488068757[202] = 0.0;
   out_7444513227488068757[203] = 0.0;
   out_7444513227488068757[204] = 0.0;
   out_7444513227488068757[205] = 0.0;
   out_7444513227488068757[206] = 1.0;
   out_7444513227488068757[207] = 0.0;
   out_7444513227488068757[208] = 0.0;
   out_7444513227488068757[209] = 0.0;
   out_7444513227488068757[210] = 0.0;
   out_7444513227488068757[211] = 0.0;
   out_7444513227488068757[212] = 0.0;
   out_7444513227488068757[213] = 0.0;
   out_7444513227488068757[214] = 0.0;
   out_7444513227488068757[215] = 0.0;
   out_7444513227488068757[216] = 0.0;
   out_7444513227488068757[217] = 0.0;
   out_7444513227488068757[218] = 0.0;
   out_7444513227488068757[219] = 0.0;
   out_7444513227488068757[220] = 0.0;
   out_7444513227488068757[221] = 0.0;
   out_7444513227488068757[222] = 0.0;
   out_7444513227488068757[223] = 0.0;
   out_7444513227488068757[224] = 0.0;
   out_7444513227488068757[225] = 0.0;
   out_7444513227488068757[226] = 0.0;
   out_7444513227488068757[227] = 0.0;
   out_7444513227488068757[228] = 0.0;
   out_7444513227488068757[229] = 1.0;
   out_7444513227488068757[230] = 0.0;
   out_7444513227488068757[231] = 0.0;
   out_7444513227488068757[232] = 0.0;
   out_7444513227488068757[233] = 0.0;
   out_7444513227488068757[234] = 0.0;
   out_7444513227488068757[235] = 0.0;
   out_7444513227488068757[236] = 0.0;
   out_7444513227488068757[237] = 0.0;
   out_7444513227488068757[238] = 0.0;
   out_7444513227488068757[239] = 0.0;
   out_7444513227488068757[240] = 0.0;
   out_7444513227488068757[241] = 0.0;
   out_7444513227488068757[242] = 0.0;
   out_7444513227488068757[243] = 0.0;
   out_7444513227488068757[244] = 0.0;
   out_7444513227488068757[245] = 0.0;
   out_7444513227488068757[246] = 0.0;
   out_7444513227488068757[247] = 0.0;
   out_7444513227488068757[248] = 0.0;
   out_7444513227488068757[249] = 0.0;
   out_7444513227488068757[250] = 0.0;
   out_7444513227488068757[251] = 0.0;
   out_7444513227488068757[252] = 1.0;
   out_7444513227488068757[253] = 0.0;
   out_7444513227488068757[254] = 0.0;
   out_7444513227488068757[255] = 0.0;
   out_7444513227488068757[256] = 0.0;
   out_7444513227488068757[257] = 0.0;
   out_7444513227488068757[258] = 0.0;
   out_7444513227488068757[259] = 0.0;
   out_7444513227488068757[260] = 0.0;
   out_7444513227488068757[261] = 0.0;
   out_7444513227488068757[262] = 0.0;
   out_7444513227488068757[263] = 0.0;
   out_7444513227488068757[264] = 0.0;
   out_7444513227488068757[265] = 0.0;
   out_7444513227488068757[266] = 0.0;
   out_7444513227488068757[267] = 0.0;
   out_7444513227488068757[268] = 0.0;
   out_7444513227488068757[269] = 0.0;
   out_7444513227488068757[270] = 0.0;
   out_7444513227488068757[271] = 0.0;
   out_7444513227488068757[272] = 0.0;
   out_7444513227488068757[273] = 0.0;
   out_7444513227488068757[274] = 0.0;
   out_7444513227488068757[275] = 1.0;
   out_7444513227488068757[276] = 0.0;
   out_7444513227488068757[277] = 0.0;
   out_7444513227488068757[278] = 0.0;
   out_7444513227488068757[279] = 0.0;
   out_7444513227488068757[280] = 0.0;
   out_7444513227488068757[281] = 0.0;
   out_7444513227488068757[282] = 0.0;
   out_7444513227488068757[283] = 0.0;
   out_7444513227488068757[284] = 0.0;
   out_7444513227488068757[285] = 0.0;
   out_7444513227488068757[286] = 0.0;
   out_7444513227488068757[287] = 0.0;
   out_7444513227488068757[288] = 0.0;
   out_7444513227488068757[289] = 0.0;
   out_7444513227488068757[290] = 0.0;
   out_7444513227488068757[291] = 0.0;
   out_7444513227488068757[292] = 0.0;
   out_7444513227488068757[293] = 0.0;
   out_7444513227488068757[294] = 0.0;
   out_7444513227488068757[295] = 0.0;
   out_7444513227488068757[296] = 0.0;
   out_7444513227488068757[297] = 0.0;
   out_7444513227488068757[298] = 1.0;
   out_7444513227488068757[299] = 0.0;
   out_7444513227488068757[300] = 0.0;
   out_7444513227488068757[301] = 0.0;
   out_7444513227488068757[302] = 0.0;
   out_7444513227488068757[303] = 0.0;
   out_7444513227488068757[304] = 0.0;
   out_7444513227488068757[305] = 0.0;
   out_7444513227488068757[306] = 0.0;
   out_7444513227488068757[307] = 0.0;
   out_7444513227488068757[308] = 0.0;
   out_7444513227488068757[309] = 0.0;
   out_7444513227488068757[310] = 0.0;
   out_7444513227488068757[311] = 0.0;
   out_7444513227488068757[312] = 0.0;
   out_7444513227488068757[313] = 0.0;
   out_7444513227488068757[314] = 0.0;
   out_7444513227488068757[315] = 0.0;
   out_7444513227488068757[316] = 0.0;
   out_7444513227488068757[317] = 0.0;
   out_7444513227488068757[318] = 0.0;
   out_7444513227488068757[319] = 0.0;
   out_7444513227488068757[320] = 0.0;
   out_7444513227488068757[321] = 1.0;
   out_7444513227488068757[322] = 0.0;
   out_7444513227488068757[323] = 0.0;
   out_7444513227488068757[324] = 0.0;
   out_7444513227488068757[325] = 0.0;
   out_7444513227488068757[326] = 0.0;
   out_7444513227488068757[327] = 0.0;
   out_7444513227488068757[328] = 0.0;
   out_7444513227488068757[329] = 0.0;
   out_7444513227488068757[330] = 0.0;
   out_7444513227488068757[331] = 0.0;
   out_7444513227488068757[332] = 0.0;
   out_7444513227488068757[333] = 0.0;
   out_7444513227488068757[334] = 0.0;
   out_7444513227488068757[335] = 0.0;
   out_7444513227488068757[336] = 0.0;
   out_7444513227488068757[337] = 0.0;
   out_7444513227488068757[338] = 0.0;
   out_7444513227488068757[339] = 0.0;
   out_7444513227488068757[340] = 0.0;
   out_7444513227488068757[341] = 0.0;
   out_7444513227488068757[342] = 0.0;
   out_7444513227488068757[343] = 0.0;
   out_7444513227488068757[344] = 1.0;
   out_7444513227488068757[345] = 0.0;
   out_7444513227488068757[346] = 0.0;
   out_7444513227488068757[347] = 0.0;
   out_7444513227488068757[348] = 0.0;
   out_7444513227488068757[349] = 0.0;
   out_7444513227488068757[350] = 0.0;
   out_7444513227488068757[351] = 0.0;
   out_7444513227488068757[352] = 0.0;
   out_7444513227488068757[353] = 0.0;
   out_7444513227488068757[354] = 0.0;
   out_7444513227488068757[355] = 0.0;
   out_7444513227488068757[356] = 0.0;
   out_7444513227488068757[357] = 0.0;
   out_7444513227488068757[358] = 0.0;
   out_7444513227488068757[359] = 0.0;
   out_7444513227488068757[360] = 0.0;
   out_7444513227488068757[361] = 0.0;
   out_7444513227488068757[362] = 0.0;
   out_7444513227488068757[363] = 0.0;
   out_7444513227488068757[364] = 0.0;
   out_7444513227488068757[365] = 0.0;
   out_7444513227488068757[366] = 0.0;
   out_7444513227488068757[367] = 1.0;
   out_7444513227488068757[368] = 0.0;
   out_7444513227488068757[369] = 0.0;
   out_7444513227488068757[370] = 0.0;
   out_7444513227488068757[371] = 0.0;
   out_7444513227488068757[372] = 0.0;
   out_7444513227488068757[373] = 0.0;
   out_7444513227488068757[374] = 0.0;
   out_7444513227488068757[375] = 0.0;
   out_7444513227488068757[376] = 0.0;
   out_7444513227488068757[377] = 0.0;
   out_7444513227488068757[378] = 0.0;
   out_7444513227488068757[379] = 0.0;
   out_7444513227488068757[380] = 0.0;
   out_7444513227488068757[381] = 0.0;
   out_7444513227488068757[382] = 0.0;
   out_7444513227488068757[383] = 0.0;
   out_7444513227488068757[384] = 0.0;
   out_7444513227488068757[385] = 0.0;
   out_7444513227488068757[386] = 0.0;
   out_7444513227488068757[387] = 0.0;
   out_7444513227488068757[388] = 0.0;
   out_7444513227488068757[389] = 0.0;
   out_7444513227488068757[390] = 1.0;
   out_7444513227488068757[391] = 0.0;
   out_7444513227488068757[392] = 0.0;
   out_7444513227488068757[393] = 0.0;
   out_7444513227488068757[394] = 0.0;
   out_7444513227488068757[395] = 0.0;
   out_7444513227488068757[396] = 0.0;
   out_7444513227488068757[397] = 0.0;
   out_7444513227488068757[398] = 0.0;
   out_7444513227488068757[399] = 0.0;
   out_7444513227488068757[400] = 0.0;
   out_7444513227488068757[401] = 0.0;
   out_7444513227488068757[402] = 0.0;
   out_7444513227488068757[403] = 0.0;
   out_7444513227488068757[404] = 0.0;
   out_7444513227488068757[405] = 0.0;
   out_7444513227488068757[406] = 0.0;
   out_7444513227488068757[407] = 0.0;
   out_7444513227488068757[408] = 0.0;
   out_7444513227488068757[409] = 0.0;
   out_7444513227488068757[410] = 0.0;
   out_7444513227488068757[411] = 0.0;
   out_7444513227488068757[412] = 0.0;
   out_7444513227488068757[413] = 1.0;
   out_7444513227488068757[414] = 0.0;
   out_7444513227488068757[415] = 0.0;
   out_7444513227488068757[416] = 0.0;
   out_7444513227488068757[417] = 0.0;
   out_7444513227488068757[418] = 0.0;
   out_7444513227488068757[419] = 0.0;
   out_7444513227488068757[420] = 0.0;
   out_7444513227488068757[421] = 0.0;
   out_7444513227488068757[422] = 0.0;
   out_7444513227488068757[423] = 0.0;
   out_7444513227488068757[424] = 0.0;
   out_7444513227488068757[425] = 0.0;
   out_7444513227488068757[426] = 0.0;
   out_7444513227488068757[427] = 0.0;
   out_7444513227488068757[428] = 0.0;
   out_7444513227488068757[429] = 0.0;
   out_7444513227488068757[430] = 0.0;
   out_7444513227488068757[431] = 0.0;
   out_7444513227488068757[432] = 0.0;
   out_7444513227488068757[433] = 0.0;
   out_7444513227488068757[434] = 0.0;
   out_7444513227488068757[435] = 0.0;
   out_7444513227488068757[436] = 1.0;
   out_7444513227488068757[437] = 0.0;
   out_7444513227488068757[438] = 0.0;
   out_7444513227488068757[439] = 0.0;
   out_7444513227488068757[440] = 0.0;
   out_7444513227488068757[441] = 0.0;
   out_7444513227488068757[442] = 0.0;
   out_7444513227488068757[443] = 0.0;
   out_7444513227488068757[444] = 0.0;
   out_7444513227488068757[445] = 0.0;
   out_7444513227488068757[446] = 0.0;
   out_7444513227488068757[447] = 0.0;
   out_7444513227488068757[448] = 0.0;
   out_7444513227488068757[449] = 0.0;
   out_7444513227488068757[450] = 0.0;
   out_7444513227488068757[451] = 0.0;
   out_7444513227488068757[452] = 0.0;
   out_7444513227488068757[453] = 0.0;
   out_7444513227488068757[454] = 0.0;
   out_7444513227488068757[455] = 0.0;
   out_7444513227488068757[456] = 0.0;
   out_7444513227488068757[457] = 0.0;
   out_7444513227488068757[458] = 0.0;
   out_7444513227488068757[459] = 1.0;
   out_7444513227488068757[460] = 0.0;
   out_7444513227488068757[461] = 0.0;
   out_7444513227488068757[462] = 0.0;
   out_7444513227488068757[463] = 0.0;
   out_7444513227488068757[464] = 0.0;
   out_7444513227488068757[465] = 0.0;
   out_7444513227488068757[466] = 0.0;
   out_7444513227488068757[467] = 0.0;
   out_7444513227488068757[468] = 0.0;
   out_7444513227488068757[469] = 0.0;
   out_7444513227488068757[470] = 0.0;
   out_7444513227488068757[471] = 0.0;
   out_7444513227488068757[472] = 0.0;
   out_7444513227488068757[473] = 0.0;
   out_7444513227488068757[474] = 0.0;
   out_7444513227488068757[475] = 0.0;
   out_7444513227488068757[476] = 0.0;
   out_7444513227488068757[477] = 0.0;
   out_7444513227488068757[478] = 0.0;
   out_7444513227488068757[479] = 0.0;
   out_7444513227488068757[480] = 0.0;
   out_7444513227488068757[481] = 0.0;
   out_7444513227488068757[482] = 1.0;
   out_7444513227488068757[483] = 0.0;
   out_7444513227488068757[484] = 0.0;
   out_7444513227488068757[485] = 0.0;
   out_7444513227488068757[486] = 0.0;
   out_7444513227488068757[487] = 0.0;
   out_7444513227488068757[488] = 0.0;
   out_7444513227488068757[489] = 0.0;
   out_7444513227488068757[490] = 0.0;
   out_7444513227488068757[491] = 0.0;
   out_7444513227488068757[492] = 0.0;
   out_7444513227488068757[493] = 0.0;
   out_7444513227488068757[494] = 0.0;
   out_7444513227488068757[495] = 0.0;
   out_7444513227488068757[496] = 0.0;
   out_7444513227488068757[497] = 0.0;
   out_7444513227488068757[498] = 0.0;
   out_7444513227488068757[499] = 0.0;
   out_7444513227488068757[500] = 0.0;
   out_7444513227488068757[501] = 0.0;
   out_7444513227488068757[502] = 0.0;
   out_7444513227488068757[503] = 0.0;
   out_7444513227488068757[504] = 0.0;
   out_7444513227488068757[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_5185949218516742942) {
   out_5185949218516742942[0] = dt*state[7] + state[0];
   out_5185949218516742942[1] = dt*state[8] + state[1];
   out_5185949218516742942[2] = dt*state[9] + state[2];
   out_5185949218516742942[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5185949218516742942[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5185949218516742942[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5185949218516742942[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5185949218516742942[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_5185949218516742942[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_5185949218516742942[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_5185949218516742942[10] = state[10];
   out_5185949218516742942[11] = state[11];
   out_5185949218516742942[12] = state[12];
   out_5185949218516742942[13] = state[13];
   out_5185949218516742942[14] = state[14];
   out_5185949218516742942[15] = state[15];
   out_5185949218516742942[16] = state[16];
   out_5185949218516742942[17] = state[17];
   out_5185949218516742942[18] = state[18];
   out_5185949218516742942[19] = state[19];
   out_5185949218516742942[20] = state[20];
   out_5185949218516742942[21] = state[21];
   out_5185949218516742942[22] = state[22];
}
void F_fun(double *state, double dt, double *out_1043013476035030683) {
   out_1043013476035030683[0] = 1;
   out_1043013476035030683[1] = 0;
   out_1043013476035030683[2] = 0;
   out_1043013476035030683[3] = 0;
   out_1043013476035030683[4] = 0;
   out_1043013476035030683[5] = 0;
   out_1043013476035030683[6] = dt;
   out_1043013476035030683[7] = 0;
   out_1043013476035030683[8] = 0;
   out_1043013476035030683[9] = 0;
   out_1043013476035030683[10] = 0;
   out_1043013476035030683[11] = 0;
   out_1043013476035030683[12] = 0;
   out_1043013476035030683[13] = 0;
   out_1043013476035030683[14] = 0;
   out_1043013476035030683[15] = 0;
   out_1043013476035030683[16] = 0;
   out_1043013476035030683[17] = 0;
   out_1043013476035030683[18] = 0;
   out_1043013476035030683[19] = 0;
   out_1043013476035030683[20] = 0;
   out_1043013476035030683[21] = 0;
   out_1043013476035030683[22] = 0;
   out_1043013476035030683[23] = 1;
   out_1043013476035030683[24] = 0;
   out_1043013476035030683[25] = 0;
   out_1043013476035030683[26] = 0;
   out_1043013476035030683[27] = 0;
   out_1043013476035030683[28] = 0;
   out_1043013476035030683[29] = dt;
   out_1043013476035030683[30] = 0;
   out_1043013476035030683[31] = 0;
   out_1043013476035030683[32] = 0;
   out_1043013476035030683[33] = 0;
   out_1043013476035030683[34] = 0;
   out_1043013476035030683[35] = 0;
   out_1043013476035030683[36] = 0;
   out_1043013476035030683[37] = 0;
   out_1043013476035030683[38] = 0;
   out_1043013476035030683[39] = 0;
   out_1043013476035030683[40] = 0;
   out_1043013476035030683[41] = 0;
   out_1043013476035030683[42] = 0;
   out_1043013476035030683[43] = 0;
   out_1043013476035030683[44] = 0;
   out_1043013476035030683[45] = 0;
   out_1043013476035030683[46] = 1;
   out_1043013476035030683[47] = 0;
   out_1043013476035030683[48] = 0;
   out_1043013476035030683[49] = 0;
   out_1043013476035030683[50] = 0;
   out_1043013476035030683[51] = 0;
   out_1043013476035030683[52] = dt;
   out_1043013476035030683[53] = 0;
   out_1043013476035030683[54] = 0;
   out_1043013476035030683[55] = 0;
   out_1043013476035030683[56] = 0;
   out_1043013476035030683[57] = 0;
   out_1043013476035030683[58] = 0;
   out_1043013476035030683[59] = 0;
   out_1043013476035030683[60] = 0;
   out_1043013476035030683[61] = 0;
   out_1043013476035030683[62] = 0;
   out_1043013476035030683[63] = 0;
   out_1043013476035030683[64] = 0;
   out_1043013476035030683[65] = 0;
   out_1043013476035030683[66] = 0;
   out_1043013476035030683[67] = 0;
   out_1043013476035030683[68] = 0;
   out_1043013476035030683[69] = 1;
   out_1043013476035030683[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1043013476035030683[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1043013476035030683[72] = 0;
   out_1043013476035030683[73] = 0;
   out_1043013476035030683[74] = 0;
   out_1043013476035030683[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1043013476035030683[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1043013476035030683[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1043013476035030683[78] = 0;
   out_1043013476035030683[79] = 0;
   out_1043013476035030683[80] = 0;
   out_1043013476035030683[81] = 0;
   out_1043013476035030683[82] = 0;
   out_1043013476035030683[83] = 0;
   out_1043013476035030683[84] = 0;
   out_1043013476035030683[85] = 0;
   out_1043013476035030683[86] = 0;
   out_1043013476035030683[87] = 0;
   out_1043013476035030683[88] = 0;
   out_1043013476035030683[89] = 0;
   out_1043013476035030683[90] = 0;
   out_1043013476035030683[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1043013476035030683[92] = 1;
   out_1043013476035030683[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1043013476035030683[94] = 0;
   out_1043013476035030683[95] = 0;
   out_1043013476035030683[96] = 0;
   out_1043013476035030683[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1043013476035030683[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1043013476035030683[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1043013476035030683[100] = 0;
   out_1043013476035030683[101] = 0;
   out_1043013476035030683[102] = 0;
   out_1043013476035030683[103] = 0;
   out_1043013476035030683[104] = 0;
   out_1043013476035030683[105] = 0;
   out_1043013476035030683[106] = 0;
   out_1043013476035030683[107] = 0;
   out_1043013476035030683[108] = 0;
   out_1043013476035030683[109] = 0;
   out_1043013476035030683[110] = 0;
   out_1043013476035030683[111] = 0;
   out_1043013476035030683[112] = 0;
   out_1043013476035030683[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1043013476035030683[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1043013476035030683[115] = 1;
   out_1043013476035030683[116] = 0;
   out_1043013476035030683[117] = 0;
   out_1043013476035030683[118] = 0;
   out_1043013476035030683[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1043013476035030683[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1043013476035030683[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1043013476035030683[122] = 0;
   out_1043013476035030683[123] = 0;
   out_1043013476035030683[124] = 0;
   out_1043013476035030683[125] = 0;
   out_1043013476035030683[126] = 0;
   out_1043013476035030683[127] = 0;
   out_1043013476035030683[128] = 0;
   out_1043013476035030683[129] = 0;
   out_1043013476035030683[130] = 0;
   out_1043013476035030683[131] = 0;
   out_1043013476035030683[132] = 0;
   out_1043013476035030683[133] = 0;
   out_1043013476035030683[134] = 0;
   out_1043013476035030683[135] = 0;
   out_1043013476035030683[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1043013476035030683[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1043013476035030683[138] = 1;
   out_1043013476035030683[139] = 0;
   out_1043013476035030683[140] = 0;
   out_1043013476035030683[141] = 0;
   out_1043013476035030683[142] = 0;
   out_1043013476035030683[143] = 0;
   out_1043013476035030683[144] = 0;
   out_1043013476035030683[145] = 0;
   out_1043013476035030683[146] = 0;
   out_1043013476035030683[147] = 0;
   out_1043013476035030683[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1043013476035030683[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1043013476035030683[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1043013476035030683[151] = 0;
   out_1043013476035030683[152] = 0;
   out_1043013476035030683[153] = 0;
   out_1043013476035030683[154] = 0;
   out_1043013476035030683[155] = 0;
   out_1043013476035030683[156] = 0;
   out_1043013476035030683[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1043013476035030683[158] = 0;
   out_1043013476035030683[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1043013476035030683[160] = 0;
   out_1043013476035030683[161] = 1;
   out_1043013476035030683[162] = 0;
   out_1043013476035030683[163] = 0;
   out_1043013476035030683[164] = 0;
   out_1043013476035030683[165] = 0;
   out_1043013476035030683[166] = 0;
   out_1043013476035030683[167] = 0;
   out_1043013476035030683[168] = 0;
   out_1043013476035030683[169] = 0;
   out_1043013476035030683[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1043013476035030683[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1043013476035030683[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1043013476035030683[173] = 0;
   out_1043013476035030683[174] = 0;
   out_1043013476035030683[175] = 0;
   out_1043013476035030683[176] = 0;
   out_1043013476035030683[177] = 0;
   out_1043013476035030683[178] = 0;
   out_1043013476035030683[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_1043013476035030683[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1043013476035030683[181] = 0;
   out_1043013476035030683[182] = 0;
   out_1043013476035030683[183] = 0;
   out_1043013476035030683[184] = 1;
   out_1043013476035030683[185] = 0;
   out_1043013476035030683[186] = 0;
   out_1043013476035030683[187] = 0;
   out_1043013476035030683[188] = 0;
   out_1043013476035030683[189] = 0;
   out_1043013476035030683[190] = 0;
   out_1043013476035030683[191] = 0;
   out_1043013476035030683[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1043013476035030683[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1043013476035030683[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1043013476035030683[195] = 0;
   out_1043013476035030683[196] = 0;
   out_1043013476035030683[197] = 0;
   out_1043013476035030683[198] = 0;
   out_1043013476035030683[199] = 0;
   out_1043013476035030683[200] = 0;
   out_1043013476035030683[201] = 0;
   out_1043013476035030683[202] = 0;
   out_1043013476035030683[203] = 0;
   out_1043013476035030683[204] = 0;
   out_1043013476035030683[205] = 0;
   out_1043013476035030683[206] = 0;
   out_1043013476035030683[207] = 1;
   out_1043013476035030683[208] = 0;
   out_1043013476035030683[209] = 0;
   out_1043013476035030683[210] = 0;
   out_1043013476035030683[211] = 0;
   out_1043013476035030683[212] = 0;
   out_1043013476035030683[213] = 0;
   out_1043013476035030683[214] = 0;
   out_1043013476035030683[215] = 0;
   out_1043013476035030683[216] = 0;
   out_1043013476035030683[217] = 0;
   out_1043013476035030683[218] = 0;
   out_1043013476035030683[219] = 0;
   out_1043013476035030683[220] = 0;
   out_1043013476035030683[221] = 0;
   out_1043013476035030683[222] = 0;
   out_1043013476035030683[223] = 0;
   out_1043013476035030683[224] = 0;
   out_1043013476035030683[225] = 0;
   out_1043013476035030683[226] = 0;
   out_1043013476035030683[227] = 0;
   out_1043013476035030683[228] = 0;
   out_1043013476035030683[229] = 0;
   out_1043013476035030683[230] = 1;
   out_1043013476035030683[231] = 0;
   out_1043013476035030683[232] = 0;
   out_1043013476035030683[233] = 0;
   out_1043013476035030683[234] = 0;
   out_1043013476035030683[235] = 0;
   out_1043013476035030683[236] = 0;
   out_1043013476035030683[237] = 0;
   out_1043013476035030683[238] = 0;
   out_1043013476035030683[239] = 0;
   out_1043013476035030683[240] = 0;
   out_1043013476035030683[241] = 0;
   out_1043013476035030683[242] = 0;
   out_1043013476035030683[243] = 0;
   out_1043013476035030683[244] = 0;
   out_1043013476035030683[245] = 0;
   out_1043013476035030683[246] = 0;
   out_1043013476035030683[247] = 0;
   out_1043013476035030683[248] = 0;
   out_1043013476035030683[249] = 0;
   out_1043013476035030683[250] = 0;
   out_1043013476035030683[251] = 0;
   out_1043013476035030683[252] = 0;
   out_1043013476035030683[253] = 1;
   out_1043013476035030683[254] = 0;
   out_1043013476035030683[255] = 0;
   out_1043013476035030683[256] = 0;
   out_1043013476035030683[257] = 0;
   out_1043013476035030683[258] = 0;
   out_1043013476035030683[259] = 0;
   out_1043013476035030683[260] = 0;
   out_1043013476035030683[261] = 0;
   out_1043013476035030683[262] = 0;
   out_1043013476035030683[263] = 0;
   out_1043013476035030683[264] = 0;
   out_1043013476035030683[265] = 0;
   out_1043013476035030683[266] = 0;
   out_1043013476035030683[267] = 0;
   out_1043013476035030683[268] = 0;
   out_1043013476035030683[269] = 0;
   out_1043013476035030683[270] = 0;
   out_1043013476035030683[271] = 0;
   out_1043013476035030683[272] = 0;
   out_1043013476035030683[273] = 0;
   out_1043013476035030683[274] = 0;
   out_1043013476035030683[275] = 0;
   out_1043013476035030683[276] = 1;
   out_1043013476035030683[277] = 0;
   out_1043013476035030683[278] = 0;
   out_1043013476035030683[279] = 0;
   out_1043013476035030683[280] = 0;
   out_1043013476035030683[281] = 0;
   out_1043013476035030683[282] = 0;
   out_1043013476035030683[283] = 0;
   out_1043013476035030683[284] = 0;
   out_1043013476035030683[285] = 0;
   out_1043013476035030683[286] = 0;
   out_1043013476035030683[287] = 0;
   out_1043013476035030683[288] = 0;
   out_1043013476035030683[289] = 0;
   out_1043013476035030683[290] = 0;
   out_1043013476035030683[291] = 0;
   out_1043013476035030683[292] = 0;
   out_1043013476035030683[293] = 0;
   out_1043013476035030683[294] = 0;
   out_1043013476035030683[295] = 0;
   out_1043013476035030683[296] = 0;
   out_1043013476035030683[297] = 0;
   out_1043013476035030683[298] = 0;
   out_1043013476035030683[299] = 1;
   out_1043013476035030683[300] = 0;
   out_1043013476035030683[301] = 0;
   out_1043013476035030683[302] = 0;
   out_1043013476035030683[303] = 0;
   out_1043013476035030683[304] = 0;
   out_1043013476035030683[305] = 0;
   out_1043013476035030683[306] = 0;
   out_1043013476035030683[307] = 0;
   out_1043013476035030683[308] = 0;
   out_1043013476035030683[309] = 0;
   out_1043013476035030683[310] = 0;
   out_1043013476035030683[311] = 0;
   out_1043013476035030683[312] = 0;
   out_1043013476035030683[313] = 0;
   out_1043013476035030683[314] = 0;
   out_1043013476035030683[315] = 0;
   out_1043013476035030683[316] = 0;
   out_1043013476035030683[317] = 0;
   out_1043013476035030683[318] = 0;
   out_1043013476035030683[319] = 0;
   out_1043013476035030683[320] = 0;
   out_1043013476035030683[321] = 0;
   out_1043013476035030683[322] = 1;
   out_1043013476035030683[323] = 0;
   out_1043013476035030683[324] = 0;
   out_1043013476035030683[325] = 0;
   out_1043013476035030683[326] = 0;
   out_1043013476035030683[327] = 0;
   out_1043013476035030683[328] = 0;
   out_1043013476035030683[329] = 0;
   out_1043013476035030683[330] = 0;
   out_1043013476035030683[331] = 0;
   out_1043013476035030683[332] = 0;
   out_1043013476035030683[333] = 0;
   out_1043013476035030683[334] = 0;
   out_1043013476035030683[335] = 0;
   out_1043013476035030683[336] = 0;
   out_1043013476035030683[337] = 0;
   out_1043013476035030683[338] = 0;
   out_1043013476035030683[339] = 0;
   out_1043013476035030683[340] = 0;
   out_1043013476035030683[341] = 0;
   out_1043013476035030683[342] = 0;
   out_1043013476035030683[343] = 0;
   out_1043013476035030683[344] = 0;
   out_1043013476035030683[345] = 1;
   out_1043013476035030683[346] = 0;
   out_1043013476035030683[347] = 0;
   out_1043013476035030683[348] = 0;
   out_1043013476035030683[349] = 0;
   out_1043013476035030683[350] = 0;
   out_1043013476035030683[351] = 0;
   out_1043013476035030683[352] = 0;
   out_1043013476035030683[353] = 0;
   out_1043013476035030683[354] = 0;
   out_1043013476035030683[355] = 0;
   out_1043013476035030683[356] = 0;
   out_1043013476035030683[357] = 0;
   out_1043013476035030683[358] = 0;
   out_1043013476035030683[359] = 0;
   out_1043013476035030683[360] = 0;
   out_1043013476035030683[361] = 0;
   out_1043013476035030683[362] = 0;
   out_1043013476035030683[363] = 0;
   out_1043013476035030683[364] = 0;
   out_1043013476035030683[365] = 0;
   out_1043013476035030683[366] = 0;
   out_1043013476035030683[367] = 0;
   out_1043013476035030683[368] = 1;
   out_1043013476035030683[369] = 0;
   out_1043013476035030683[370] = 0;
   out_1043013476035030683[371] = 0;
   out_1043013476035030683[372] = 0;
   out_1043013476035030683[373] = 0;
   out_1043013476035030683[374] = 0;
   out_1043013476035030683[375] = 0;
   out_1043013476035030683[376] = 0;
   out_1043013476035030683[377] = 0;
   out_1043013476035030683[378] = 0;
   out_1043013476035030683[379] = 0;
   out_1043013476035030683[380] = 0;
   out_1043013476035030683[381] = 0;
   out_1043013476035030683[382] = 0;
   out_1043013476035030683[383] = 0;
   out_1043013476035030683[384] = 0;
   out_1043013476035030683[385] = 0;
   out_1043013476035030683[386] = 0;
   out_1043013476035030683[387] = 0;
   out_1043013476035030683[388] = 0;
   out_1043013476035030683[389] = 0;
   out_1043013476035030683[390] = 0;
   out_1043013476035030683[391] = 1;
   out_1043013476035030683[392] = 0;
   out_1043013476035030683[393] = 0;
   out_1043013476035030683[394] = 0;
   out_1043013476035030683[395] = 0;
   out_1043013476035030683[396] = 0;
   out_1043013476035030683[397] = 0;
   out_1043013476035030683[398] = 0;
   out_1043013476035030683[399] = 0;
   out_1043013476035030683[400] = 0;
   out_1043013476035030683[401] = 0;
   out_1043013476035030683[402] = 0;
   out_1043013476035030683[403] = 0;
   out_1043013476035030683[404] = 0;
   out_1043013476035030683[405] = 0;
   out_1043013476035030683[406] = 0;
   out_1043013476035030683[407] = 0;
   out_1043013476035030683[408] = 0;
   out_1043013476035030683[409] = 0;
   out_1043013476035030683[410] = 0;
   out_1043013476035030683[411] = 0;
   out_1043013476035030683[412] = 0;
   out_1043013476035030683[413] = 0;
   out_1043013476035030683[414] = 1;
   out_1043013476035030683[415] = 0;
   out_1043013476035030683[416] = 0;
   out_1043013476035030683[417] = 0;
   out_1043013476035030683[418] = 0;
   out_1043013476035030683[419] = 0;
   out_1043013476035030683[420] = 0;
   out_1043013476035030683[421] = 0;
   out_1043013476035030683[422] = 0;
   out_1043013476035030683[423] = 0;
   out_1043013476035030683[424] = 0;
   out_1043013476035030683[425] = 0;
   out_1043013476035030683[426] = 0;
   out_1043013476035030683[427] = 0;
   out_1043013476035030683[428] = 0;
   out_1043013476035030683[429] = 0;
   out_1043013476035030683[430] = 0;
   out_1043013476035030683[431] = 0;
   out_1043013476035030683[432] = 0;
   out_1043013476035030683[433] = 0;
   out_1043013476035030683[434] = 0;
   out_1043013476035030683[435] = 0;
   out_1043013476035030683[436] = 0;
   out_1043013476035030683[437] = 1;
   out_1043013476035030683[438] = 0;
   out_1043013476035030683[439] = 0;
   out_1043013476035030683[440] = 0;
   out_1043013476035030683[441] = 0;
   out_1043013476035030683[442] = 0;
   out_1043013476035030683[443] = 0;
   out_1043013476035030683[444] = 0;
   out_1043013476035030683[445] = 0;
   out_1043013476035030683[446] = 0;
   out_1043013476035030683[447] = 0;
   out_1043013476035030683[448] = 0;
   out_1043013476035030683[449] = 0;
   out_1043013476035030683[450] = 0;
   out_1043013476035030683[451] = 0;
   out_1043013476035030683[452] = 0;
   out_1043013476035030683[453] = 0;
   out_1043013476035030683[454] = 0;
   out_1043013476035030683[455] = 0;
   out_1043013476035030683[456] = 0;
   out_1043013476035030683[457] = 0;
   out_1043013476035030683[458] = 0;
   out_1043013476035030683[459] = 0;
   out_1043013476035030683[460] = 1;
   out_1043013476035030683[461] = 0;
   out_1043013476035030683[462] = 0;
   out_1043013476035030683[463] = 0;
   out_1043013476035030683[464] = 0;
   out_1043013476035030683[465] = 0;
   out_1043013476035030683[466] = 0;
   out_1043013476035030683[467] = 0;
   out_1043013476035030683[468] = 0;
   out_1043013476035030683[469] = 0;
   out_1043013476035030683[470] = 0;
   out_1043013476035030683[471] = 0;
   out_1043013476035030683[472] = 0;
   out_1043013476035030683[473] = 0;
   out_1043013476035030683[474] = 0;
   out_1043013476035030683[475] = 0;
   out_1043013476035030683[476] = 0;
   out_1043013476035030683[477] = 0;
   out_1043013476035030683[478] = 0;
   out_1043013476035030683[479] = 0;
   out_1043013476035030683[480] = 0;
   out_1043013476035030683[481] = 0;
   out_1043013476035030683[482] = 0;
   out_1043013476035030683[483] = 1;
}
void h_3(double *state, double *unused, double *out_2345013922980096237) {
   out_2345013922980096237[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_6361024363989608575) {
   out_6361024363989608575[0] = 0;
   out_6361024363989608575[1] = 0;
   out_6361024363989608575[2] = 0;
   out_6361024363989608575[3] = 0;
   out_6361024363989608575[4] = 0;
   out_6361024363989608575[5] = 0;
   out_6361024363989608575[6] = 0;
   out_6361024363989608575[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6361024363989608575[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6361024363989608575[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6361024363989608575[10] = 0;
   out_6361024363989608575[11] = 0;
   out_6361024363989608575[12] = 0;
   out_6361024363989608575[13] = 0;
   out_6361024363989608575[14] = 0;
   out_6361024363989608575[15] = 0;
   out_6361024363989608575[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_6361024363989608575[17] = 0;
   out_6361024363989608575[18] = 0;
   out_6361024363989608575[19] = 0;
   out_6361024363989608575[20] = 0;
   out_6361024363989608575[21] = 0;
   out_6361024363989608575[22] = 0;
}
void h_4(double *state, double *unused, double *out_4185385736519085316) {
   out_4185385736519085316[0] = state[10] + state[13];
   out_4185385736519085316[1] = state[11] + state[14];
   out_4185385736519085316[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1197661997788284489) {
   out_1197661997788284489[0] = 0;
   out_1197661997788284489[1] = 0;
   out_1197661997788284489[2] = 0;
   out_1197661997788284489[3] = 0;
   out_1197661997788284489[4] = 0;
   out_1197661997788284489[5] = 0;
   out_1197661997788284489[6] = 0;
   out_1197661997788284489[7] = 0;
   out_1197661997788284489[8] = 0;
   out_1197661997788284489[9] = 0;
   out_1197661997788284489[10] = 1;
   out_1197661997788284489[11] = 0;
   out_1197661997788284489[12] = 0;
   out_1197661997788284489[13] = 1;
   out_1197661997788284489[14] = 0;
   out_1197661997788284489[15] = 0;
   out_1197661997788284489[16] = 0;
   out_1197661997788284489[17] = 0;
   out_1197661997788284489[18] = 0;
   out_1197661997788284489[19] = 0;
   out_1197661997788284489[20] = 0;
   out_1197661997788284489[21] = 0;
   out_1197661997788284489[22] = 0;
   out_1197661997788284489[23] = 0;
   out_1197661997788284489[24] = 0;
   out_1197661997788284489[25] = 0;
   out_1197661997788284489[26] = 0;
   out_1197661997788284489[27] = 0;
   out_1197661997788284489[28] = 0;
   out_1197661997788284489[29] = 0;
   out_1197661997788284489[30] = 0;
   out_1197661997788284489[31] = 0;
   out_1197661997788284489[32] = 0;
   out_1197661997788284489[33] = 0;
   out_1197661997788284489[34] = 1;
   out_1197661997788284489[35] = 0;
   out_1197661997788284489[36] = 0;
   out_1197661997788284489[37] = 1;
   out_1197661997788284489[38] = 0;
   out_1197661997788284489[39] = 0;
   out_1197661997788284489[40] = 0;
   out_1197661997788284489[41] = 0;
   out_1197661997788284489[42] = 0;
   out_1197661997788284489[43] = 0;
   out_1197661997788284489[44] = 0;
   out_1197661997788284489[45] = 0;
   out_1197661997788284489[46] = 0;
   out_1197661997788284489[47] = 0;
   out_1197661997788284489[48] = 0;
   out_1197661997788284489[49] = 0;
   out_1197661997788284489[50] = 0;
   out_1197661997788284489[51] = 0;
   out_1197661997788284489[52] = 0;
   out_1197661997788284489[53] = 0;
   out_1197661997788284489[54] = 0;
   out_1197661997788284489[55] = 0;
   out_1197661997788284489[56] = 0;
   out_1197661997788284489[57] = 0;
   out_1197661997788284489[58] = 1;
   out_1197661997788284489[59] = 0;
   out_1197661997788284489[60] = 0;
   out_1197661997788284489[61] = 1;
   out_1197661997788284489[62] = 0;
   out_1197661997788284489[63] = 0;
   out_1197661997788284489[64] = 0;
   out_1197661997788284489[65] = 0;
   out_1197661997788284489[66] = 0;
   out_1197661997788284489[67] = 0;
   out_1197661997788284489[68] = 0;
}
void h_9(double *state, double *unused, double *out_3221296746929078341) {
   out_3221296746929078341[0] = state[10];
   out_3221296746929078341[1] = state[11];
   out_3221296746929078341[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5877513856007755182) {
   out_5877513856007755182[0] = 0;
   out_5877513856007755182[1] = 0;
   out_5877513856007755182[2] = 0;
   out_5877513856007755182[3] = 0;
   out_5877513856007755182[4] = 0;
   out_5877513856007755182[5] = 0;
   out_5877513856007755182[6] = 0;
   out_5877513856007755182[7] = 0;
   out_5877513856007755182[8] = 0;
   out_5877513856007755182[9] = 0;
   out_5877513856007755182[10] = 1;
   out_5877513856007755182[11] = 0;
   out_5877513856007755182[12] = 0;
   out_5877513856007755182[13] = 0;
   out_5877513856007755182[14] = 0;
   out_5877513856007755182[15] = 0;
   out_5877513856007755182[16] = 0;
   out_5877513856007755182[17] = 0;
   out_5877513856007755182[18] = 0;
   out_5877513856007755182[19] = 0;
   out_5877513856007755182[20] = 0;
   out_5877513856007755182[21] = 0;
   out_5877513856007755182[22] = 0;
   out_5877513856007755182[23] = 0;
   out_5877513856007755182[24] = 0;
   out_5877513856007755182[25] = 0;
   out_5877513856007755182[26] = 0;
   out_5877513856007755182[27] = 0;
   out_5877513856007755182[28] = 0;
   out_5877513856007755182[29] = 0;
   out_5877513856007755182[30] = 0;
   out_5877513856007755182[31] = 0;
   out_5877513856007755182[32] = 0;
   out_5877513856007755182[33] = 0;
   out_5877513856007755182[34] = 1;
   out_5877513856007755182[35] = 0;
   out_5877513856007755182[36] = 0;
   out_5877513856007755182[37] = 0;
   out_5877513856007755182[38] = 0;
   out_5877513856007755182[39] = 0;
   out_5877513856007755182[40] = 0;
   out_5877513856007755182[41] = 0;
   out_5877513856007755182[42] = 0;
   out_5877513856007755182[43] = 0;
   out_5877513856007755182[44] = 0;
   out_5877513856007755182[45] = 0;
   out_5877513856007755182[46] = 0;
   out_5877513856007755182[47] = 0;
   out_5877513856007755182[48] = 0;
   out_5877513856007755182[49] = 0;
   out_5877513856007755182[50] = 0;
   out_5877513856007755182[51] = 0;
   out_5877513856007755182[52] = 0;
   out_5877513856007755182[53] = 0;
   out_5877513856007755182[54] = 0;
   out_5877513856007755182[55] = 0;
   out_5877513856007755182[56] = 0;
   out_5877513856007755182[57] = 0;
   out_5877513856007755182[58] = 1;
   out_5877513856007755182[59] = 0;
   out_5877513856007755182[60] = 0;
   out_5877513856007755182[61] = 0;
   out_5877513856007755182[62] = 0;
   out_5877513856007755182[63] = 0;
   out_5877513856007755182[64] = 0;
   out_5877513856007755182[65] = 0;
   out_5877513856007755182[66] = 0;
   out_5877513856007755182[67] = 0;
   out_5877513856007755182[68] = 0;
}
void h_10(double *state, double *unused, double *out_9055066725885081608) {
   out_9055066725885081608[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_9055066725885081608[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_9055066725885081608[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_1646237611563522501) {
   out_1646237611563522501[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1646237611563522501[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1646237611563522501[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1646237611563522501[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1646237611563522501[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1646237611563522501[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1646237611563522501[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1646237611563522501[7] = 0;
   out_1646237611563522501[8] = 0;
   out_1646237611563522501[9] = 0;
   out_1646237611563522501[10] = 0;
   out_1646237611563522501[11] = 0;
   out_1646237611563522501[12] = 0;
   out_1646237611563522501[13] = 0;
   out_1646237611563522501[14] = 0;
   out_1646237611563522501[15] = 0;
   out_1646237611563522501[16] = 0;
   out_1646237611563522501[17] = 1;
   out_1646237611563522501[18] = 0;
   out_1646237611563522501[19] = 0;
   out_1646237611563522501[20] = 0;
   out_1646237611563522501[21] = 0;
   out_1646237611563522501[22] = 0;
   out_1646237611563522501[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1646237611563522501[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1646237611563522501[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1646237611563522501[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1646237611563522501[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1646237611563522501[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1646237611563522501[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1646237611563522501[30] = 0;
   out_1646237611563522501[31] = 0;
   out_1646237611563522501[32] = 0;
   out_1646237611563522501[33] = 0;
   out_1646237611563522501[34] = 0;
   out_1646237611563522501[35] = 0;
   out_1646237611563522501[36] = 0;
   out_1646237611563522501[37] = 0;
   out_1646237611563522501[38] = 0;
   out_1646237611563522501[39] = 0;
   out_1646237611563522501[40] = 0;
   out_1646237611563522501[41] = 1;
   out_1646237611563522501[42] = 0;
   out_1646237611563522501[43] = 0;
   out_1646237611563522501[44] = 0;
   out_1646237611563522501[45] = 0;
   out_1646237611563522501[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1646237611563522501[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1646237611563522501[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1646237611563522501[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1646237611563522501[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1646237611563522501[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1646237611563522501[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1646237611563522501[53] = 0;
   out_1646237611563522501[54] = 0;
   out_1646237611563522501[55] = 0;
   out_1646237611563522501[56] = 0;
   out_1646237611563522501[57] = 0;
   out_1646237611563522501[58] = 0;
   out_1646237611563522501[59] = 0;
   out_1646237611563522501[60] = 0;
   out_1646237611563522501[61] = 0;
   out_1646237611563522501[62] = 0;
   out_1646237611563522501[63] = 0;
   out_1646237611563522501[64] = 0;
   out_1646237611563522501[65] = 1;
   out_1646237611563522501[66] = 0;
   out_1646237611563522501[67] = 0;
   out_1646237611563522501[68] = 0;
}
void h_12(double *state, double *unused, double *out_668963084071596404) {
   out_668963084071596404[0] = state[0];
   out_668963084071596404[1] = state[1];
   out_668963084071596404[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5307250896935293208) {
   out_5307250896935293208[0] = 1;
   out_5307250896935293208[1] = 0;
   out_5307250896935293208[2] = 0;
   out_5307250896935293208[3] = 0;
   out_5307250896935293208[4] = 0;
   out_5307250896935293208[5] = 0;
   out_5307250896935293208[6] = 0;
   out_5307250896935293208[7] = 0;
   out_5307250896935293208[8] = 0;
   out_5307250896935293208[9] = 0;
   out_5307250896935293208[10] = 0;
   out_5307250896935293208[11] = 0;
   out_5307250896935293208[12] = 0;
   out_5307250896935293208[13] = 0;
   out_5307250896935293208[14] = 0;
   out_5307250896935293208[15] = 0;
   out_5307250896935293208[16] = 0;
   out_5307250896935293208[17] = 0;
   out_5307250896935293208[18] = 0;
   out_5307250896935293208[19] = 0;
   out_5307250896935293208[20] = 0;
   out_5307250896935293208[21] = 0;
   out_5307250896935293208[22] = 0;
   out_5307250896935293208[23] = 0;
   out_5307250896935293208[24] = 1;
   out_5307250896935293208[25] = 0;
   out_5307250896935293208[26] = 0;
   out_5307250896935293208[27] = 0;
   out_5307250896935293208[28] = 0;
   out_5307250896935293208[29] = 0;
   out_5307250896935293208[30] = 0;
   out_5307250896935293208[31] = 0;
   out_5307250896935293208[32] = 0;
   out_5307250896935293208[33] = 0;
   out_5307250896935293208[34] = 0;
   out_5307250896935293208[35] = 0;
   out_5307250896935293208[36] = 0;
   out_5307250896935293208[37] = 0;
   out_5307250896935293208[38] = 0;
   out_5307250896935293208[39] = 0;
   out_5307250896935293208[40] = 0;
   out_5307250896935293208[41] = 0;
   out_5307250896935293208[42] = 0;
   out_5307250896935293208[43] = 0;
   out_5307250896935293208[44] = 0;
   out_5307250896935293208[45] = 0;
   out_5307250896935293208[46] = 0;
   out_5307250896935293208[47] = 0;
   out_5307250896935293208[48] = 1;
   out_5307250896935293208[49] = 0;
   out_5307250896935293208[50] = 0;
   out_5307250896935293208[51] = 0;
   out_5307250896935293208[52] = 0;
   out_5307250896935293208[53] = 0;
   out_5307250896935293208[54] = 0;
   out_5307250896935293208[55] = 0;
   out_5307250896935293208[56] = 0;
   out_5307250896935293208[57] = 0;
   out_5307250896935293208[58] = 0;
   out_5307250896935293208[59] = 0;
   out_5307250896935293208[60] = 0;
   out_5307250896935293208[61] = 0;
   out_5307250896935293208[62] = 0;
   out_5307250896935293208[63] = 0;
   out_5307250896935293208[64] = 0;
   out_5307250896935293208[65] = 0;
   out_5307250896935293208[66] = 0;
   out_5307250896935293208[67] = 0;
   out_5307250896935293208[68] = 0;
}
void h_31(double *state, double *unused, double *out_2073798829201540176) {
   out_2073798829201540176[0] = state[7];
   out_2073798829201540176[1] = state[8];
   out_2073798829201540176[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2632161121791873387) {
   out_2632161121791873387[0] = 0;
   out_2632161121791873387[1] = 0;
   out_2632161121791873387[2] = 0;
   out_2632161121791873387[3] = 0;
   out_2632161121791873387[4] = 0;
   out_2632161121791873387[5] = 0;
   out_2632161121791873387[6] = 0;
   out_2632161121791873387[7] = 1;
   out_2632161121791873387[8] = 0;
   out_2632161121791873387[9] = 0;
   out_2632161121791873387[10] = 0;
   out_2632161121791873387[11] = 0;
   out_2632161121791873387[12] = 0;
   out_2632161121791873387[13] = 0;
   out_2632161121791873387[14] = 0;
   out_2632161121791873387[15] = 0;
   out_2632161121791873387[16] = 0;
   out_2632161121791873387[17] = 0;
   out_2632161121791873387[18] = 0;
   out_2632161121791873387[19] = 0;
   out_2632161121791873387[20] = 0;
   out_2632161121791873387[21] = 0;
   out_2632161121791873387[22] = 0;
   out_2632161121791873387[23] = 0;
   out_2632161121791873387[24] = 0;
   out_2632161121791873387[25] = 0;
   out_2632161121791873387[26] = 0;
   out_2632161121791873387[27] = 0;
   out_2632161121791873387[28] = 0;
   out_2632161121791873387[29] = 0;
   out_2632161121791873387[30] = 0;
   out_2632161121791873387[31] = 1;
   out_2632161121791873387[32] = 0;
   out_2632161121791873387[33] = 0;
   out_2632161121791873387[34] = 0;
   out_2632161121791873387[35] = 0;
   out_2632161121791873387[36] = 0;
   out_2632161121791873387[37] = 0;
   out_2632161121791873387[38] = 0;
   out_2632161121791873387[39] = 0;
   out_2632161121791873387[40] = 0;
   out_2632161121791873387[41] = 0;
   out_2632161121791873387[42] = 0;
   out_2632161121791873387[43] = 0;
   out_2632161121791873387[44] = 0;
   out_2632161121791873387[45] = 0;
   out_2632161121791873387[46] = 0;
   out_2632161121791873387[47] = 0;
   out_2632161121791873387[48] = 0;
   out_2632161121791873387[49] = 0;
   out_2632161121791873387[50] = 0;
   out_2632161121791873387[51] = 0;
   out_2632161121791873387[52] = 0;
   out_2632161121791873387[53] = 0;
   out_2632161121791873387[54] = 0;
   out_2632161121791873387[55] = 1;
   out_2632161121791873387[56] = 0;
   out_2632161121791873387[57] = 0;
   out_2632161121791873387[58] = 0;
   out_2632161121791873387[59] = 0;
   out_2632161121791873387[60] = 0;
   out_2632161121791873387[61] = 0;
   out_2632161121791873387[62] = 0;
   out_2632161121791873387[63] = 0;
   out_2632161121791873387[64] = 0;
   out_2632161121791873387[65] = 0;
   out_2632161121791873387[66] = 0;
   out_2632161121791873387[67] = 0;
   out_2632161121791873387[68] = 0;
}
void h_32(double *state, double *unused, double *out_4184026125448841534) {
   out_4184026125448841534[0] = state[3];
   out_4184026125448841534[1] = state[4];
   out_4184026125448841534[2] = state[5];
   out_4184026125448841534[3] = state[6];
}
void H_32(double *state, double *unused, double *out_681659400144121740) {
   out_681659400144121740[0] = 0;
   out_681659400144121740[1] = 0;
   out_681659400144121740[2] = 0;
   out_681659400144121740[3] = 1;
   out_681659400144121740[4] = 0;
   out_681659400144121740[5] = 0;
   out_681659400144121740[6] = 0;
   out_681659400144121740[7] = 0;
   out_681659400144121740[8] = 0;
   out_681659400144121740[9] = 0;
   out_681659400144121740[10] = 0;
   out_681659400144121740[11] = 0;
   out_681659400144121740[12] = 0;
   out_681659400144121740[13] = 0;
   out_681659400144121740[14] = 0;
   out_681659400144121740[15] = 0;
   out_681659400144121740[16] = 0;
   out_681659400144121740[17] = 0;
   out_681659400144121740[18] = 0;
   out_681659400144121740[19] = 0;
   out_681659400144121740[20] = 0;
   out_681659400144121740[21] = 0;
   out_681659400144121740[22] = 0;
   out_681659400144121740[23] = 0;
   out_681659400144121740[24] = 0;
   out_681659400144121740[25] = 0;
   out_681659400144121740[26] = 0;
   out_681659400144121740[27] = 1;
   out_681659400144121740[28] = 0;
   out_681659400144121740[29] = 0;
   out_681659400144121740[30] = 0;
   out_681659400144121740[31] = 0;
   out_681659400144121740[32] = 0;
   out_681659400144121740[33] = 0;
   out_681659400144121740[34] = 0;
   out_681659400144121740[35] = 0;
   out_681659400144121740[36] = 0;
   out_681659400144121740[37] = 0;
   out_681659400144121740[38] = 0;
   out_681659400144121740[39] = 0;
   out_681659400144121740[40] = 0;
   out_681659400144121740[41] = 0;
   out_681659400144121740[42] = 0;
   out_681659400144121740[43] = 0;
   out_681659400144121740[44] = 0;
   out_681659400144121740[45] = 0;
   out_681659400144121740[46] = 0;
   out_681659400144121740[47] = 0;
   out_681659400144121740[48] = 0;
   out_681659400144121740[49] = 0;
   out_681659400144121740[50] = 0;
   out_681659400144121740[51] = 1;
   out_681659400144121740[52] = 0;
   out_681659400144121740[53] = 0;
   out_681659400144121740[54] = 0;
   out_681659400144121740[55] = 0;
   out_681659400144121740[56] = 0;
   out_681659400144121740[57] = 0;
   out_681659400144121740[58] = 0;
   out_681659400144121740[59] = 0;
   out_681659400144121740[60] = 0;
   out_681659400144121740[61] = 0;
   out_681659400144121740[62] = 0;
   out_681659400144121740[63] = 0;
   out_681659400144121740[64] = 0;
   out_681659400144121740[65] = 0;
   out_681659400144121740[66] = 0;
   out_681659400144121740[67] = 0;
   out_681659400144121740[68] = 0;
   out_681659400144121740[69] = 0;
   out_681659400144121740[70] = 0;
   out_681659400144121740[71] = 0;
   out_681659400144121740[72] = 0;
   out_681659400144121740[73] = 0;
   out_681659400144121740[74] = 0;
   out_681659400144121740[75] = 1;
   out_681659400144121740[76] = 0;
   out_681659400144121740[77] = 0;
   out_681659400144121740[78] = 0;
   out_681659400144121740[79] = 0;
   out_681659400144121740[80] = 0;
   out_681659400144121740[81] = 0;
   out_681659400144121740[82] = 0;
   out_681659400144121740[83] = 0;
   out_681659400144121740[84] = 0;
   out_681659400144121740[85] = 0;
   out_681659400144121740[86] = 0;
   out_681659400144121740[87] = 0;
   out_681659400144121740[88] = 0;
   out_681659400144121740[89] = 0;
   out_681659400144121740[90] = 0;
   out_681659400144121740[91] = 0;
}
void h_13(double *state, double *unused, double *out_1780775751453709096) {
   out_1780775751453709096[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1780775751453709096[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1780775751453709096[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8483862250287810165) {
   out_8483862250287810165[0] = 0;
   out_8483862250287810165[1] = 0;
   out_8483862250287810165[2] = 0;
   out_8483862250287810165[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8483862250287810165[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8483862250287810165[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8483862250287810165[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8483862250287810165[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8483862250287810165[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8483862250287810165[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8483862250287810165[10] = 0;
   out_8483862250287810165[11] = 0;
   out_8483862250287810165[12] = 0;
   out_8483862250287810165[13] = 0;
   out_8483862250287810165[14] = 0;
   out_8483862250287810165[15] = 0;
   out_8483862250287810165[16] = 0;
   out_8483862250287810165[17] = 0;
   out_8483862250287810165[18] = 0;
   out_8483862250287810165[19] = 0;
   out_8483862250287810165[20] = 0;
   out_8483862250287810165[21] = 0;
   out_8483862250287810165[22] = 0;
   out_8483862250287810165[23] = 0;
   out_8483862250287810165[24] = 0;
   out_8483862250287810165[25] = 0;
   out_8483862250287810165[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8483862250287810165[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8483862250287810165[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8483862250287810165[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8483862250287810165[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8483862250287810165[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8483862250287810165[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8483862250287810165[33] = 0;
   out_8483862250287810165[34] = 0;
   out_8483862250287810165[35] = 0;
   out_8483862250287810165[36] = 0;
   out_8483862250287810165[37] = 0;
   out_8483862250287810165[38] = 0;
   out_8483862250287810165[39] = 0;
   out_8483862250287810165[40] = 0;
   out_8483862250287810165[41] = 0;
   out_8483862250287810165[42] = 0;
   out_8483862250287810165[43] = 0;
   out_8483862250287810165[44] = 0;
   out_8483862250287810165[45] = 0;
   out_8483862250287810165[46] = 0;
   out_8483862250287810165[47] = 0;
   out_8483862250287810165[48] = 0;
   out_8483862250287810165[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8483862250287810165[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8483862250287810165[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8483862250287810165[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8483862250287810165[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8483862250287810165[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8483862250287810165[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8483862250287810165[56] = 0;
   out_8483862250287810165[57] = 0;
   out_8483862250287810165[58] = 0;
   out_8483862250287810165[59] = 0;
   out_8483862250287810165[60] = 0;
   out_8483862250287810165[61] = 0;
   out_8483862250287810165[62] = 0;
   out_8483862250287810165[63] = 0;
   out_8483862250287810165[64] = 0;
   out_8483862250287810165[65] = 0;
   out_8483862250287810165[66] = 0;
   out_8483862250287810165[67] = 0;
   out_8483862250287810165[68] = 0;
}
void h_14(double *state, double *unused, double *out_3221296746929078341) {
   out_3221296746929078341[0] = state[10];
   out_3221296746929078341[1] = state[11];
   out_3221296746929078341[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5877513856007755182) {
   out_5877513856007755182[0] = 0;
   out_5877513856007755182[1] = 0;
   out_5877513856007755182[2] = 0;
   out_5877513856007755182[3] = 0;
   out_5877513856007755182[4] = 0;
   out_5877513856007755182[5] = 0;
   out_5877513856007755182[6] = 0;
   out_5877513856007755182[7] = 0;
   out_5877513856007755182[8] = 0;
   out_5877513856007755182[9] = 0;
   out_5877513856007755182[10] = 1;
   out_5877513856007755182[11] = 0;
   out_5877513856007755182[12] = 0;
   out_5877513856007755182[13] = 0;
   out_5877513856007755182[14] = 0;
   out_5877513856007755182[15] = 0;
   out_5877513856007755182[16] = 0;
   out_5877513856007755182[17] = 0;
   out_5877513856007755182[18] = 0;
   out_5877513856007755182[19] = 0;
   out_5877513856007755182[20] = 0;
   out_5877513856007755182[21] = 0;
   out_5877513856007755182[22] = 0;
   out_5877513856007755182[23] = 0;
   out_5877513856007755182[24] = 0;
   out_5877513856007755182[25] = 0;
   out_5877513856007755182[26] = 0;
   out_5877513856007755182[27] = 0;
   out_5877513856007755182[28] = 0;
   out_5877513856007755182[29] = 0;
   out_5877513856007755182[30] = 0;
   out_5877513856007755182[31] = 0;
   out_5877513856007755182[32] = 0;
   out_5877513856007755182[33] = 0;
   out_5877513856007755182[34] = 1;
   out_5877513856007755182[35] = 0;
   out_5877513856007755182[36] = 0;
   out_5877513856007755182[37] = 0;
   out_5877513856007755182[38] = 0;
   out_5877513856007755182[39] = 0;
   out_5877513856007755182[40] = 0;
   out_5877513856007755182[41] = 0;
   out_5877513856007755182[42] = 0;
   out_5877513856007755182[43] = 0;
   out_5877513856007755182[44] = 0;
   out_5877513856007755182[45] = 0;
   out_5877513856007755182[46] = 0;
   out_5877513856007755182[47] = 0;
   out_5877513856007755182[48] = 0;
   out_5877513856007755182[49] = 0;
   out_5877513856007755182[50] = 0;
   out_5877513856007755182[51] = 0;
   out_5877513856007755182[52] = 0;
   out_5877513856007755182[53] = 0;
   out_5877513856007755182[54] = 0;
   out_5877513856007755182[55] = 0;
   out_5877513856007755182[56] = 0;
   out_5877513856007755182[57] = 0;
   out_5877513856007755182[58] = 1;
   out_5877513856007755182[59] = 0;
   out_5877513856007755182[60] = 0;
   out_5877513856007755182[61] = 0;
   out_5877513856007755182[62] = 0;
   out_5877513856007755182[63] = 0;
   out_5877513856007755182[64] = 0;
   out_5877513856007755182[65] = 0;
   out_5877513856007755182[66] = 0;
   out_5877513856007755182[67] = 0;
   out_5877513856007755182[68] = 0;
}
void h_19(double *state, double *unused, double *out_7542665183633693230) {
   out_7542665183633693230[0] = state[20];
   out_7542665183633693230[1] = state[21];
   out_7542665183633693230[2] = state[22];
}
void H_19(double *state, double *unused, double *out_1444834004905324001) {
   out_1444834004905324001[0] = 0;
   out_1444834004905324001[1] = 0;
   out_1444834004905324001[2] = 0;
   out_1444834004905324001[3] = 0;
   out_1444834004905324001[4] = 0;
   out_1444834004905324001[5] = 0;
   out_1444834004905324001[6] = 0;
   out_1444834004905324001[7] = 0;
   out_1444834004905324001[8] = 0;
   out_1444834004905324001[9] = 0;
   out_1444834004905324001[10] = 0;
   out_1444834004905324001[11] = 0;
   out_1444834004905324001[12] = 0;
   out_1444834004905324001[13] = 0;
   out_1444834004905324001[14] = 0;
   out_1444834004905324001[15] = 0;
   out_1444834004905324001[16] = 0;
   out_1444834004905324001[17] = 0;
   out_1444834004905324001[18] = 0;
   out_1444834004905324001[19] = 0;
   out_1444834004905324001[20] = 1;
   out_1444834004905324001[21] = 0;
   out_1444834004905324001[22] = 0;
   out_1444834004905324001[23] = 0;
   out_1444834004905324001[24] = 0;
   out_1444834004905324001[25] = 0;
   out_1444834004905324001[26] = 0;
   out_1444834004905324001[27] = 0;
   out_1444834004905324001[28] = 0;
   out_1444834004905324001[29] = 0;
   out_1444834004905324001[30] = 0;
   out_1444834004905324001[31] = 0;
   out_1444834004905324001[32] = 0;
   out_1444834004905324001[33] = 0;
   out_1444834004905324001[34] = 0;
   out_1444834004905324001[35] = 0;
   out_1444834004905324001[36] = 0;
   out_1444834004905324001[37] = 0;
   out_1444834004905324001[38] = 0;
   out_1444834004905324001[39] = 0;
   out_1444834004905324001[40] = 0;
   out_1444834004905324001[41] = 0;
   out_1444834004905324001[42] = 0;
   out_1444834004905324001[43] = 0;
   out_1444834004905324001[44] = 1;
   out_1444834004905324001[45] = 0;
   out_1444834004905324001[46] = 0;
   out_1444834004905324001[47] = 0;
   out_1444834004905324001[48] = 0;
   out_1444834004905324001[49] = 0;
   out_1444834004905324001[50] = 0;
   out_1444834004905324001[51] = 0;
   out_1444834004905324001[52] = 0;
   out_1444834004905324001[53] = 0;
   out_1444834004905324001[54] = 0;
   out_1444834004905324001[55] = 0;
   out_1444834004905324001[56] = 0;
   out_1444834004905324001[57] = 0;
   out_1444834004905324001[58] = 0;
   out_1444834004905324001[59] = 0;
   out_1444834004905324001[60] = 0;
   out_1444834004905324001[61] = 0;
   out_1444834004905324001[62] = 0;
   out_1444834004905324001[63] = 0;
   out_1444834004905324001[64] = 0;
   out_1444834004905324001[65] = 0;
   out_1444834004905324001[66] = 0;
   out_1444834004905324001[67] = 0;
   out_1444834004905324001[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_308962912849910417) {
  H(in_vec, out_308962912849910417);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3752222109732568852) {
  err_fun(nom_x, delta_x, out_3752222109732568852);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2689811853463818113) {
  inv_err_fun(nom_x, true_x, out_2689811853463818113);
}
void live_H_mod_fun(double *state, double *out_7444513227488068757) {
  H_mod_fun(state, out_7444513227488068757);
}
void live_f_fun(double *state, double dt, double *out_5185949218516742942) {
  f_fun(state,  dt, out_5185949218516742942);
}
void live_F_fun(double *state, double dt, double *out_1043013476035030683) {
  F_fun(state,  dt, out_1043013476035030683);
}
void live_h_3(double *state, double *unused, double *out_2345013922980096237) {
  h_3(state, unused, out_2345013922980096237);
}
void live_H_3(double *state, double *unused, double *out_6361024363989608575) {
  H_3(state, unused, out_6361024363989608575);
}
void live_h_4(double *state, double *unused, double *out_4185385736519085316) {
  h_4(state, unused, out_4185385736519085316);
}
void live_H_4(double *state, double *unused, double *out_1197661997788284489) {
  H_4(state, unused, out_1197661997788284489);
}
void live_h_9(double *state, double *unused, double *out_3221296746929078341) {
  h_9(state, unused, out_3221296746929078341);
}
void live_H_9(double *state, double *unused, double *out_5877513856007755182) {
  H_9(state, unused, out_5877513856007755182);
}
void live_h_10(double *state, double *unused, double *out_9055066725885081608) {
  h_10(state, unused, out_9055066725885081608);
}
void live_H_10(double *state, double *unused, double *out_1646237611563522501) {
  H_10(state, unused, out_1646237611563522501);
}
void live_h_12(double *state, double *unused, double *out_668963084071596404) {
  h_12(state, unused, out_668963084071596404);
}
void live_H_12(double *state, double *unused, double *out_5307250896935293208) {
  H_12(state, unused, out_5307250896935293208);
}
void live_h_31(double *state, double *unused, double *out_2073798829201540176) {
  h_31(state, unused, out_2073798829201540176);
}
void live_H_31(double *state, double *unused, double *out_2632161121791873387) {
  H_31(state, unused, out_2632161121791873387);
}
void live_h_32(double *state, double *unused, double *out_4184026125448841534) {
  h_32(state, unused, out_4184026125448841534);
}
void live_H_32(double *state, double *unused, double *out_681659400144121740) {
  H_32(state, unused, out_681659400144121740);
}
void live_h_13(double *state, double *unused, double *out_1780775751453709096) {
  h_13(state, unused, out_1780775751453709096);
}
void live_H_13(double *state, double *unused, double *out_8483862250287810165) {
  H_13(state, unused, out_8483862250287810165);
}
void live_h_14(double *state, double *unused, double *out_3221296746929078341) {
  h_14(state, unused, out_3221296746929078341);
}
void live_H_14(double *state, double *unused, double *out_5877513856007755182) {
  H_14(state, unused, out_5877513856007755182);
}
void live_h_19(double *state, double *unused, double *out_7542665183633693230) {
  h_19(state, unused, out_7542665183633693230);
}
void live_H_19(double *state, double *unused, double *out_1444834004905324001) {
  H_19(state, unused, out_1444834004905324001);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
